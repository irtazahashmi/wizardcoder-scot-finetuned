def first_Repeated_Char(str):
    """ Find the first repeated character in a given string.
    >>> first_Repeated_Char('Google')
    'o'
    >>> first_Repeated_Char('data')
    'a'
    >>> first_Repeated_Char('Python')
    '0'
    """
    pass

# The pseudo code of the above function:
# Input: str: str
# Output: ch: str
# 1: for i in range(len(str)) do
# 2:    if str[i] in str[i+1:] then
# 3:        return str[i]
# 4: return '0'

def prime_num(num):
    """ Check if the given integer is a prime number.
    >>> prime_num(13)
    True
    >>> prime_num(7)
    True
    >>> prime_num(-1010)
    False
    """
    pass

# The pseudo code of the above function:
# Input: num: int
# Output: True or False
# 1: if num < 2 then
# 2:    return False
# 3: for i <- 2 to sqrt(num) do
# 4:    if num % i == 0 then
# 5:        return False
# 6: return True

def max_of_nth(test_list, N):
    """ Find the maximum of nth column from the given tuple list.
    >>> max_of_nth([(5, 6, 7), (1, 3, 5), (8, 9, 19)], 2)
    19
    >>> max_of_nth([(6, 7, 8), (2, 4, 6), (9, 10, 20)], 1)
    10
    >>> max_of_nth([(7, 8, 9), (3, 5, 7), (10, 11, 21)], 1)
    11
    """
    pass

# The pseudo code of the above function:
# Input: test_list: list of tuples, N: int
# Output: max: int
# 1: max <- -inf
# 2: for each t in test_list do
# 3:    if t[N] > max then
# 4:        max <- t[N]
# 5: return max